import{d as n,V as a,p as t,l as s,m as e,o,c as p,F as l,z as i,x as c,q as u,r,b as k,w as d,f as m,a as h,e as g}from"./app.555422d2.js";import{_ as f}from"./ItemName.c04332ab.js";import{_ as b}from"./LoadingIndicator.fb803935.js";import"./shared.ad62dd7d.js";const w=n({name:"ItemList",components:{ItemName:f,LoadingIndicator:b},props:{items:{type:Array,required:!0},itemProperty:{type:String,default:null},showNotation:{type:Boolean,default:!0},showLabel:{type:Boolean,default:!0},clickable:{type:Boolean,default:!1},indicatorByUri:{type:Object,default:()=>({})}},emits:["select"],methods:{styleForItem(n){let a={},t=this.indicatorByUri[n&&n.uri];return t||(t="transparent"),!0!==t&&(a["--jskos-vue-itemList-indicator-color"]=t),a},getItem(n){return this.itemProperty?n[this.itemProperty]:n},scrollToUri(n){const t=this.$el,s=t.querySelectorAll(`[data-uri='${n}']`)[0],e={container:t,easing:"ease-in",offset:-15,cancelable:!0,x:!1,y:!0};s&&a.scrollTo(s,200,e)}}}),v=d();t("data-v-09b2cc01");const I={class:"jskos-vue-itemList"};s();const y=v(((n,a,t,s,d,m)=>{const h=e("item-name"),g=e("loading-indicator");return o(),p("div",I,[(o(!0),p(l,null,i(n.items,(a=>(o(),p("div",{key:n.getItem(a)&&n.getItem(a).uri,style:n.styleForItem(n.getItem(a)),"data-uri":n.getItem(a)&&n.getItem(a).uri,onClick:c((t=>n.$emit("select",{item:n.getItem(a),row:!0})),["stop"])},[u(" Slot before each item's ItemName "),r(n.$slots,"beforeItem",{item:a},void 0,!0),n.getItem(a)?(o(),p(h,{key:0,item:n.getItem(a),"show-notation":n.showNotation,"show-label":n.showLabel,clickable:n.clickable,onClick:c((t=>n.$emit("select",{item:n.getItem(a),row:!1})),["stop"])},null,8,["item","show-notation","show-label","clickable","onClick"])):(o(),p(l,{key:1},[u(" Show loading indicator for null values "),u(" TODO: Reconsider. "),k(g,{size:"sm"})],2112)),u(" Slot after each item's ItemName "),r(n.$slots,"afterItem",{item:a},void 0,!0)],12,["data-uri","onClick"])))),128))])}));w.render=y,w.__scopeId="data-v-09b2cc01";const _=h('<h1 id="itemlist"><a class="header-anchor" href="#itemlist" aria-hidden="true">#</a> ItemList</h1><p>A list of JSKOS items with their notation and label.</p><p>Uses <a href="./ItemName.html">ItemName</a>.</p><h2 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><ul><li><code>items</code> (array) - array of objects <ul><li>required</li></ul></li><li><code>itemProperty</code> (string) - defines which property on the objects contains the JSKOS item <ul><li>by default, the objects themselves will be considered the JSKOS items</li></ul></li><li><code>showNotation</code> (boolean) - whether to show an item&#39;s notation <ul><li>default: <code>true</code></li></ul></li><li><code>showLabel</code> (boolean) - whether to show an item&#39;s label (<code>prefLabel</code>) <ul><li>default: <code>true</code></li></ul></li><li><code>clickable</code> (boolean) - adjusts mouse pointer and text decoration on hover if <code>true</code><ul><li>default: <code>false</code></li></ul></li><li><code>indicatorByUri</code> (object) - object that maps item URIs to either color strings or boolean values <ul><li>If either a color or <code>true</code> is given for a particular item, an indicator will be shown to the right side of the item in the list.</li><li>Note that lists use the full width of the page, so it makes sense to define a maximum width to make sure indicators can be associated with the right item.</li></ul></li><li><code>indicatorColor</code> (string) - default indicator color for <code>true</code> values <ul><li>default: green</li></ul></li></ul><h2 id="slots"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><ul><li>beforeItem: Content shown before an item (includes parameter <code>item</code>).</li><li>afterItem: Content shown after an item (includes parameter <code>item</code>).</li></ul><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><ul><li><code>scrollToUri(uri)</code> - scrolls the item list to a certain item via its URI</li></ul><h2 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><ul><li><code>select</code><ul><li>Emitted when an item or a row is clicked.</li><li>Parameter is an object with properties <code>item</code> (containing the clicked JSKOS item) and <code>row</code> (containing a boolean which is <code>true</code> when the click was initiated via the row, not on the item directly).</li></ul></li></ul><h2 id="css-variables"><a class="header-anchor" href="#css-variables" aria-hidden="true">#</a> CSS Variables</h2><ul><li><code>--jskos-vue-itemList-indicator-color</code> - default indicator color (for <code>true</code> values) <ul><li>default: green</li></ul></li></ul><h2 id="examples"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2>',14),S=g(" ðŸš€ "),q=h('<div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item-list</span>\n    <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>concepts<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:clickable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:indicator-by-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{\n      <span class="token punctuation">&#39;</span>uri:2<span class="token punctuation">&#39;</span>: true,\n      <span class="token punctuation">&#39;</span>uri:3<span class="token punctuation">&#39;</span>: true,\n      <span class="token punctuation">&#39;</span>uri:12<span class="token punctuation">&#39;</span>: <span class="token punctuation">&#39;</span>blue<span class="token punctuation">&#39;</span>,\n      <span class="token punctuation">&#39;</span>uri:13<span class="token punctuation">&#39;</span>: <span class="token punctuation">&#39;</span>yellow<span class="token punctuation">&#39;</span>,\n      <span class="token punctuation">&#39;</span>uri:14<span class="token punctuation">&#39;</span>: <span class="token punctuation">&#39;</span>black<span class="token punctuation">&#39;</span>,\n    }<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>afterItem</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ item }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- Show a rocket after all items with URIs starting with 1 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.uri.startsWith(<span class="token punctuation">&#39;</span>uri:1<span class="token punctuation">&#39;</span>)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        ðŸš€\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item-list</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ItemList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jskos-vue&quot;</span>\n\n<span class="token keyword">const</span> concepts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">15</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  concepts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    uri<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">uri:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    notation<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    prefLabel<span class="token operator">:</span> <span class="token punctuation">{</span>\n      en<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Concept no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">select</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> item<span class="token punctuation">,</span> row <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Item with URI </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>uri<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> selected (row: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>row<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">).</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',1),j='{"title":"ItemList","description":"","frontmatter":{},"headers":[{"level":2,"title":"Props","slug":"props"},{"level":2,"title":"Slots","slug":"slots"},{"level":2,"title":"Methods","slug":"methods"},{"level":2,"title":"Events","slug":"events"},{"level":2,"title":"CSS Variables","slug":"css-variables"},{"level":2,"title":"Examples","slug":"examples"}],"relativePath":"components/ItemList.md","lastUpdated":1624954656153}',L={};const T=Object.assign(L,{expose:[],setup:function(n){const a=[];for(let s=0;s<=15;s+=1)a.push({uri:`uri:${s}`,notation:[`${s}`],prefLabel:{en:`Concept no. ${s}`}});const t=({item:n,row:a})=>{alert(`Item with URI ${n.uri} selected (row: ${a}).`)};return(n,s)=>(o(),p("div",null,[_,k(w,{items:a,clickable:!0,"indicator-by-uri":{"uri:2":!0,"uri:3":!0,"uri:12":"blue","uri:13":"yellow","uri:14":"black"},onSelect:t},{afterItem:m((({item:n})=>[u(" Show a rocket after all items with URIs starting with 1 "),n.uri.startsWith("uri:1")?(o(),p(l,{key:0},[S],2112)):u("v-if",!0)])),_:1}),q]))}});export default T;export{j as __pageData};
