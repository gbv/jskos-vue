import"./chunks/index.a9c51953.js";import{I}from"./chunks/ItemName.7852b992.js";import{I as z}from"./chunks/ItemList.37c02559.js";import{I as _}from"./chunks/ItemDetails.1ea46015.js";import{h as x,s as w,o as l,c as u,b as e,t as i,x as n,F as S,l as T,n as A,d as q,a as r,e as k}from"./app.58ffbb48.js";import{d as j}from"./chunks/utils.18cb2ff0.js";import"./chunks/LoadingIndicator.35e914a0.js";import"./chunks/shared.3f0a6f78.js";import"./chunks/Arrow.42725cdf.js";import"./chunks/ConceptTree.e6385bce.js";import"./chunks/ItemSuggest.fc45560b.js";import"./chunks/vue-scrollto.ec7616c3.js";import"./chunks/style.ada7e4fb.js";import"./chunks/AutoLink.8ee23c2a.js";const O=k(`<h1 id="draganddrop" tabindex="-1">dragAndDrop <a class="header-anchor" href="#draganddrop" aria-hidden="true">#</a></h1><p>Helper to add drag and drop functionality to JSKOS items.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> utils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jskos-vue&quot;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> draggedItem<span class="token punctuation">,</span> dragstart<span class="token punctuation">,</span> dragend<span class="token punctuation">,</span> addDropzone <span class="token punctuation">}</span> <span class="token operator">=</span> utils<span class="token punctuation">.</span>dragAndDrop
</code></pre></div><h3 id="draggeditem" tabindex="-1"><code>draggedItem</code> <a class="header-anchor" href="#draggeditem" aria-hidden="true">#</a></h3><p>A reactive reference to the currently dragged item. (<code>null</code> if no item is being dragged.)</p><h3 id="dragstart-item-dragend" tabindex="-1"><code>dragstart(item)</code>, <code>dragend()</code> <a class="header-anchor" href="#dragstart-item-dragend" aria-hidden="true">#</a></h3><p>Can be used to define a draggable item. (See <a href="#defining-a-draggable-item">below</a> on how to use this.)</p><h3 id="adddropzone-element-callback" tabindex="-1"><code>addDropzone(element, callback)</code> <a class="header-anchor" href="#adddropzone-element-callback" aria-hidden="true">#</a></h3><p>Defines a new dropzone. (See <a href="#defining-a-dropzone">below</a> on how to use this.)</p><h2 id="defining-a-draggable-item" tabindex="-1">Defining a Draggable Item <a class="header-anchor" href="#defining-a-draggable-item" aria-hidden="true">#</a></h2><p>Any element can be defined as a draggable item. <a href="./../components/ItemName.html">ItemName</a> and rows in <a href="./../components/ItemList.html">ItemList</a> are draggable by default. To define an element as draggable, you need to set its <code>draggable</code> property to <code>true</code> and define event handlers for <code>dragstart</code> and <code>dragend</code> which are exported by <code>utils.dragAndDrop</code>.</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">@dragstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragstart({ uri: &#39;some:item&#39; })<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">@dragend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  Some item
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="defining-a-dropzone" tabindex="-1">Defining a Dropzone <a class="header-anchor" href="#defining-a-dropzone" aria-hidden="true">#</a></h2><p>Any element can be defined as a dropzone and can therefore receive item drops. <a href="./../components/ItemDetails.html">ItemDetails</a> is a dropzone by default. To define a dropzone, you need to use the <code>addDropzone</code> function that is exported by <code>utils.dragAndDrop</code>. It needs to be called separately for every dropzone. It receives two parameters and returns an object with several properties.</p><h3 id="adddropzone-parameters" tabindex="-1"><code>addDropzone</code> Parameters <a class="header-anchor" href="#adddropzone-parameters" aria-hidden="true">#</a></h3><ul><li><code>element</code> - a reference to a DOM element <ul><li>optional, but if not given, the event handlers <code>dragover</code>, <code>dragenter</code>, <code>dragleave</code>, and <code>drop</code> need to be defined manually on the element</li></ul></li><li><code>callback</code> (function) - a function that is called when an item is dropped on the dropzone <ul><li>The first parameter will be the dropped item (which is the same as <code>draggedItem</code> that is exported by <code>utils.dragAndDrop</code>).</li><li>The other parameters are any additional parameters that are providing to <code>drop</code> (usually none).</li></ul></li></ul><h3 id="adddropzone-returned-object-properties" tabindex="-1"><code>addDropzone</code> Returned Object Properties <a class="header-anchor" href="#adddropzone-returned-object-properties" aria-hidden="true">#</a></h3><ul><li><code>isDraggingOver</code> (boolean) - a reactive boolean reference that is <code>true</code> if an item is currently being dragged over the dropzone <ul><li>Requires <code>dragenter</code> and <code>dragleave</code> events to be defined.</li></ul></li><li><code>dragover</code> - dragover event handler (required to enable drops) <ul><li>Will be added to <code>element</code> if given.</li><li>If no element is given, this <strong>has</strong> to be defined manually on the dropzone element.</li></ul></li><li><code>dragenter</code> - dragenter event handler <ul><li>Will be added to <code>element</code> if given.</li><li>If no element is given, this can optionally be defined manually on the dropzone element to enable <code>isDraggingOver</code> to work.</li></ul></li><li><code>dragleave</code> - dragleave event handler <ul><li>Will be added to <code>element</code> if given.</li><li>If no element is given, this can optionally be defined manually on the dropzone element to enable <code>isDraggingOver</code> to work.</li></ul></li><li><code>drop</code> - drop event handler (required to enable drops) <ul><li>Will be added to <code>element</code> if given.</li><li>If no element is given, this <strong>has</strong> to be defined manually on the dropzone element.</li></ul></li></ul><p>See the following examples for how this is used in practice.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h2><h3 id="basic-example" tabindex="-1">Basic Example <a class="header-anchor" href="#basic-example" aria-hidden="true">#</a></h3>`,22),E=["onDragstart"],$=k(`<div id="dropzone" class="noDrag" style="height:100px;"> This zone does not change, but you can drop an item here. </div><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> utils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jskos-vue&quot;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> draggedItem<span class="token punctuation">,</span> dragstart<span class="token punctuation">,</span> dragend<span class="token punctuation">,</span> addDropzone <span class="token punctuation">}</span> <span class="token operator">=</span> utils<span class="token punctuation">.</span>dragAndDrop
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  dragover<span class="token punctuation">,</span>
  dragenter<span class="token punctuation">,</span>
  dragleave<span class="token punctuation">,</span>
  drop<span class="token punctuation">,</span>
  isDraggingOver<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">addDropzone</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Dropped item with URI </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>uri<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// We need to use onMounted so that dropzone is mounted in DOM</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">addDropzone</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;dropzone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Dropped item with URI </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>uri<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">notation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">notation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">notation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>i<span class="token punctuation">,</span> <span class="token literal-property property">uri</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">item:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>notation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token literal-property property">prefLabel</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">en</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>notation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  Currently dragging: {{ draggedItem &amp;&amp; draggedItem.uri }}

  <span class="token comment">&lt;!-- Defining draggable items --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in items<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.uri<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@dragstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragstart(item)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@dragend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{ item.uri }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- Dropzone with manually set events and conditional CSS classes --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{
      drag: draggedItem,
      noDrag: !draggedItem,
      draggingOver: isDraggingOver,
    }<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@dragover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragover<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@dragenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragenter<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@dragleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dragleave<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@drop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drop<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{ draggedItem ? &quot;Try to drop the item here&quot; : &quot;Start dragging an item&quot; }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

  <span class="token comment">&lt;!-- Dropzone that we can get by ID; no conditional CSS classes --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dropzone<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>noDrag<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    This zone does not change, but you can drop an item here.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.drag, .noDrag</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.drag</span> <span class="token punctuation">{</span>
  <span class="token property">border-style</span><span class="token punctuation">:</span> dashed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.draggingOver</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="example-with-itemname-itemlist-itemdetails" tabindex="-1">Example with ItemName/ItemList/ItemDetails <a class="header-anchor" href="#example-with-itemname-itemlist-itemdetails" aria-hidden="true">#</a></h3><div id="dropzone2" style="height:100px;width:250px;display:flex;justify-content:center;align-items:center;border:1px solid black;"> You can drop an item here. </div>`,4),N=e("p",null,"ItemDetails (is a dropzone by default):",-1),C=k(`<div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> utils<span class="token punctuation">,</span> ItemName<span class="token punctuation">,</span> ItemList<span class="token punctuation">,</span> ItemDetails <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jskos-vue&quot;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> draggedItem<span class="token punctuation">,</span> dragstart<span class="token punctuation">,</span> dragend<span class="token punctuation">,</span> addDropzone <span class="token punctuation">}</span> <span class="token operator">=</span> utils<span class="token punctuation">.</span>dragAndDrop
<span class="token comment">// We need to use onMounted so that dropzone2 is mounted in DOM</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">addDropzone</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;dropzone2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Dropped item with URI </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>uri<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">notation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">notation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">notation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>i<span class="token punctuation">,</span> <span class="token literal-property property">uri</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">item:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>notation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token literal-property property">prefLabel</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">en</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token punctuation">.</span>notation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Selected item for ItemDetails</span>
<span class="token keyword">const</span> selected <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dropzone2<span class="token punctuation">&quot;</span></span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    You can drop an item here.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
  Single item: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item-name</span> <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items[0]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  ItemList:
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item-list</span> <span class="token attr-name">:items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  ItemDetails (is a dropzone by default):

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item-details</span>
    <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selected<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selected = $event.item<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,1),Z='{"title":"dragAndDrop","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"draggedItem","slug":"draggeditem"},{"level":3,"title":"dragstart(item), dragend()","slug":"dragstart-item-dragend"},{"level":3,"title":"addDropzone(element, callback)","slug":"adddropzone-element-callback"},{"level":2,"title":"Defining a Draggable Item","slug":"defining-a-draggable-item"},{"level":2,"title":"Defining a Dropzone","slug":"defining-a-dropzone"},{"level":3,"title":"addDropzone Parameters","slug":"adddropzone-parameters"},{"level":3,"title":"addDropzone Returned Object Properties","slug":"adddropzone-returned-object-properties"},{"level":2,"title":"Examples","slug":"examples"},{"level":3,"title":"Basic Example","slug":"basic-example"},{"level":3,"title":"Example with ItemName/ItemList/ItemDetails","slug":"example-with-itemname-itemlist-itemdetails"}],"relativePath":"utilities/dragAndDrop.md"}',L={},nn=Object.assign(L,{__name:"dragAndDrop",setup(R){const{draggedItem:p,dragstart:b,dragend:d,addDropzone:c}=j,{dragover:g,dragenter:m,dragleave:h,drop:v,isDraggingOver:D}=c(null,t=>{alert(`Dropped item with URI ${t.uri}`)});x(()=>{c(document.getElementById("dropzone"),t=>{alert(`Dropped item with URI ${t.uri}`)}),c(document.getElementById("dropzone2"),t=>{alert(`Dropped item with URI ${t.uri}`)})});const o=[{notation:["1"]},{notation:["2"]},{notation:["3"]}].map(t=>({...t,uri:`item:${t.notation[0]}`,prefLabel:{en:`Item ${t.notation[0]}`}})),y=w(o[2]);return(t,s)=>(l(),u("div",null,[O,e("p",null,"Currently dragging: "+i(n(p)&&n(p).uri),1),(l(!0),u(S,null,T(n(o),a=>(l(),u("div",{key:a.uri,draggable:"true",onDragstart:f=>n(b)(a),onDragend:s[0]||(s[0]=(...f)=>n(d)&&n(d)(...f))},i(a.uri),41,E))),128)),e("div",{class:A({drag:n(p),noDrag:!n(p),draggingOver:n(D)}),onDragover:s[1]||(s[1]=(...a)=>n(g)&&n(g)(...a)),onDragenter:s[2]||(s[2]=(...a)=>n(m)&&n(m)(...a)),onDragleave:s[3]||(s[3]=(...a)=>n(h)&&n(h)(...a)),onDrop:s[4]||(s[4]=(...a)=>n(v)&&n(v)(...a))},i(n(p)?"Try to drop the item here":"Start dragging an item"),35),$,e("p",null,[q(" Single item: "),r(I,{item:n(o)[0]},null,8,["item"])]),e("p",null,[q("ItemList: "),r(z,{items:n(o)},null,8,["items"])]),N,r(_,{item:y.value,onSelect:s[5]||(s[5]=a=>y.value=a.item)},null,8,["item"]),C]))}});export{Z as __pageData,nn as default};
