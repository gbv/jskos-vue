var n=Object.defineProperty,a=Object.defineProperties,s=Object.getOwnPropertyDescriptors,t=Object.getOwnPropertySymbols,e=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,o=(a,s,t)=>s in a?n(a,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[s]=t;import{g as c,z as l,o as u,c as i,d as r,t as k,u as d,s as g,F as m,v as h,n as v,b as f,a as b,e as y}from"./app.d57fb543.js";import"./index.94242523.js";import{_ as q}from"./ItemName.45ee4917.js";import{_ as D}from"./ItemList.daa1996a.js";import{_ as I}from"./ItemDetails.58b2f316.js";import{d as z}from"./utils.0f4dc86e.js";import"./LoadingIndicator.52cd3ce7.js";import"./shared.99084317.js";import"./Arrow.812c1b03.js";import"./ConceptTree.e1a57818.js";import"./ItemSuggest.fa29f632.js";import"./AutoLink.494f68d0.js";import"./style.4b5628f1.js";const w=b('',22),_=["onDragstart"],x=b('',4),j=y(" Single item: "),S=y("ItemList: "),T=r("p",null,"ItemDetails (is a dropzone by default):",-1),O=b('',1),A='{"title":"dragAndDrop","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"draggedItem","slug":"draggeditem"},{"level":3,"title":"dragstart(item), dragend()","slug":"dragstart-item-dragend"},{"level":3,"title":"addDropzone(element, callback)","slug":"adddropzone-element-callback"},{"level":2,"title":"Defining a Draggable Item","slug":"defining-a-draggable-item"},{"level":2,"title":"Defining a Dropzone","slug":"defining-a-dropzone"},{"level":3,"title":"addDropzone Parameters","slug":"adddropzone-parameters"},{"level":3,"title":"addDropzone Returned Object Properties","slug":"adddropzone-returned-object-properties"},{"level":2,"title":"Examples","slug":"examples"},{"level":3,"title":"Basic Example","slug":"basic-example"},{"level":3,"title":"Example with ItemName/ItemList/ItemDetails","slug":"example-with-itemname-itemlist-itemdetails"}],"relativePath":"utilities/dragAndDrop.md","lastUpdated":1628666731007}',P={};const C=Object.assign(P,{setup:function(n){const{draggedItem:b,dragstart:y,dragend:A,addDropzone:P}=z,{dragover:C,dragenter:E,dragleave:L,drop:$,isDraggingOver:R}=P(null,(n=>{alert(`Dropped item with URI ${n.uri}`)}));c((()=>{P(document.getElementById("dropzone"),(n=>{alert(`Dropped item with URI ${n.uri}`)})),P(document.getElementById("dropzone2"),(n=>{alert(`Dropped item with URI ${n.uri}`)}))}));const M=[{notation:["1"]},{notation:["2"]},{notation:["3"]}].map((n=>{return c=((n,a)=>{for(var s in a||(a={}))e.call(a,s)&&o(n,s,a[s]);if(t)for(var s of t(a))p.call(a,s)&&o(n,s,a[s]);return n})({},n),l={uri:`item:${n.notation[0]}`,prefLabel:{en:`Item ${n.notation[0]}`}},a(c,s(l));var c,l})),N=l(M[2]);return(n,a)=>(u(),i("div",null,[w,r("p",null,"Currently dragging: "+k(d(b)&&d(b).uri),1),g(" Defining draggable items "),(u(!0),i(m,null,h(d(M),(n=>(u(),i("div",{key:n.uri,draggable:"true",onDragstart:a=>d(y)(n),onDragend:a[0]||(a[0]=(...n)=>d(A)&&d(A)(...n))},k(n.uri),41,_)))),128)),g(" Dropzone with manually set events and conditional CSS classes "),r("div",{class:v({drag:d(b),noDrag:!d(b),draggingOver:d(R)}),onDragover:a[1]||(a[1]=(...n)=>d(C)&&d(C)(...n)),onDragenter:a[2]||(a[2]=(...n)=>d(E)&&d(E)(...n)),onDragleave:a[3]||(a[3]=(...n)=>d(L)&&d(L)(...n)),onDrop:a[4]||(a[4]=(...n)=>d($)&&d($)(...n))},k(d(b)?"Try to drop the item here":"Start dragging an item"),35),g(" Dropzone that we can get by ID; no conditional CSS classes "),x,r("p",null,[j,f(q,{item:d(M)[0]},null,8,["item"])]),r("p",null,[S,f(D,{items:d(M)},null,8,["items"])]),T,f(I,{item:N.value,onSelect:a[5]||(a[5]=n=>N.value=n.item)},null,8,["item"]),O]))}});export{A as __pageData,C as default};
